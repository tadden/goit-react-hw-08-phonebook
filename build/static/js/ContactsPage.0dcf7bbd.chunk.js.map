{"version":3,"sources":["components/ContentContainer/ContentContainer.module.css","components/ContentContainer/ContentContainer.js","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-selector.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","pages/ContactsPage/ContactsPage.js"],"names":["module","exports","ContentContainer","children","className","s","container","getItems","state","contacts","items","getFilter","filter","getFilteredContacts","normalizedFilter","toLowerCase","name","includes","ContactList","useSelector","dispatch","useDispatch","useEffect","operations","length","list","map","number","id","item","Button","onClick","variant","startIcon","Filter","Box","component","sx","m","width","noValidate","autoComplete","TextField","label","type","value","onChange","e","actions","target","ContactForm","useState","setName","setNumber","handleNameChange","form","onSubmit","preventDefault","find","contact","duplicateValidator","alert","input","pattern","title","required","ContactsPage"],"mappings":"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","file":"static/js/ContactsPage.0dcf7bbd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentContainer_container__2HE2g\"};","import s from './ContentContainer.module.css';\r\n\r\nexport default function ContentContainer({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3vUdv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__27MiE\",\"input\":\"Filter_input__2g0l4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__fa09Q\",\"input\":\"ContactForm_input__3C-3H\"};","export const getItems = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\n\r\nexport const getFilteredContacts = state => {\r\n  const items = getItems(state);\r\n  const filter = getFilter(state);\r\n\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return items.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport Button from '@mui/material/Button';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { useEffect } from 'react';\r\nimport * as operations from 'redux/contacts/contacts-operations';\r\nimport { getFilteredContacts } from 'redux/contacts/contacts-selector';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactList() {\r\n  const items = useSelector(getFilteredContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {items.length > 0 && (\r\n        <ul className={s.list}>\r\n          {items.map(({ name, number, id }) => (\r\n            <li className={s.item} key={id}>\r\n              <p>\r\n                {name} : {number}\r\n              </p>\r\n              <Button\r\n                onClick={() => {\r\n                  dispatch(operations.deleteContact(id));\r\n                }}\r\n                variant=\"contained\"\r\n                startIcon={<DeleteIcon />}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import s from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from 'redux/contacts/contacts-selector';\r\nimport * as actions from 'redux/contacts/contacts-slice';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Box\r\n      component=\"form\"\r\n      sx={{\r\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n      }}\r\n      noValidate\r\n      autoComplete=\"off\"\r\n    >\r\n      <TextField\r\n        label=\"Find contacts by name\"\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={e => dispatch(actions.filter(e.target.value))}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n","import { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './ContactForm.module.css';\r\nimport Button from '@mui/material/Button';\r\nimport { getItems } from 'redux/contacts/contacts-selector';\r\nimport * as operations from 'redux/contacts/contacts-operations';\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const items = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNameChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      // no default\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const duplicateValidator = name =>\r\n      items.find(contact => contact.name === name);\r\n\r\n    duplicateValidator(name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : dispatch(operations.addContact({ name, number }));\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className={s.form} onSubmit={handleSubmit}>\r\n        <label>Name</label>\r\n\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleNameChange}\r\n          className={s.input}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label>Number</label>\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleNameChange}\r\n          className={s.input}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <Button type=\"submit\" variant=\"contained\">\r\n          Add contact\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import ContactList from 'components/ContactList';\r\nimport Filter from 'components/Filter';\r\nimport ContactForm from 'components/ContactForm';\r\nimport ContentContainer from 'components/ContentContainer';\r\n\r\nexport default function ContactsPage() {\r\n  return (\r\n    <ContentContainer>\r\n      <ContactForm />\r\n      <Filter />\r\n      <ContactList />\r\n    </ContentContainer>\r\n  );\r\n}\r\n"],"sourceRoot":""}