{"version":3,"sources":["components/ContentContainer/ContentContainer.module.css","components/ContentContainer/ContentContainer.js","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","redux/contacts/contacts-selector.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","pages/ContactsPage/ContactsPage.js"],"names":["module","exports","ContentContainer","children","className","s","container","getItems","state","contacts","items","getFilter","filter","getFilteredContacts","normalizedFilter","toLowerCase","name","includes","ContactList","useSelector","dispatch","useDispatch","useEffect","operations","length","list","map","number","id","item","Button","onClick","variant","startIcon","Filter","Box","component","sx","m","width","noValidate","autoComplete","TextField","label","type","value","onChange","e","actions","target","ContactForm","useState","setName","setNumber","handleNameChange","form","onSubmit","preventDefault","find","contact","duplicateValidator","alert","input","pattern","title","required","ContactsPage"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,sC,gGCCf,SAASC,EAAT,GAAyC,IAAbC,EAAY,EAAZA,SACzC,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,M,oBCFvCH,EAAOC,QAAU,CAAC,KAAO,4B,oBCAzBD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,MAAQ,6B,sICD9CM,EAAW,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACnCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAEpCC,EAAsB,SAAAL,GACjC,IAAME,EAAQH,EAASC,GAGjBM,EAFSH,EAAUH,GAEOO,cAEhC,OAAOL,EAAME,QAAO,qBAAGI,KAChBD,cAAcE,SAASH,O,yBCFjB,SAASI,IACtB,IAAMR,EAAQS,YAAYN,GAEpBO,EAAWC,cAIjB,OAFAC,qBAAU,kBAAMF,EAASG,SAA6B,CAACH,IAGrD,mCACGV,EAAMc,OAAS,GACd,oBAAIpB,UAAWC,IAAEoB,KAAjB,SACGf,EAAMgB,KAAI,gBAAGV,EAAH,EAAGA,KAAMW,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,GAAjB,OACT,qBAAIxB,UAAWC,IAAEwB,KAAjB,UACE,8BACGb,EADH,MACYW,KAEZ,cAACG,EAAA,EAAD,CACEC,QAAS,WACPX,EAASG,IAAyBK,KAEpCI,QAAQ,YACRC,UAAW,cAAC,IAAD,IALb,sBAJ0BL,U,8BCdzB,SAASM,IACtB,IAAMtB,EAASO,YAAYR,GACrBS,EAAWC,cAEjB,OACE,cAACc,EAAA,EAAD,CACEC,UAAU,OACVC,GAAI,CACF,uBAAwB,CAAEC,EAAG,EAAGC,MAAO,SAEzCC,YAAU,EACVC,aAAa,MANf,SAQE,cAACC,EAAA,EAAD,CACEC,MAAM,wBACNC,KAAK,OACLC,MAAOjC,EACPkC,SAAU,SAAAC,GAAC,OAAI3B,EAAS4B,IAAeD,EAAEE,OAAOJ,a,8BChBzC,SAASK,IACtB,MAAwBC,mBAAS,IAAjC,mBAAOnC,EAAP,KAAaoC,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOxB,EAAP,KAAe0B,EAAf,KACM3C,EAAQS,YAAYZ,GACpBa,EAAWC,cAEXiC,EAAmB,SAAAP,GACvB,MAAwBA,EAAEE,OAAlBjC,EAAR,EAAQA,KAAM6B,EAAd,EAAcA,MAEd,OAAQ7B,GACN,IAAK,OACHoC,EAAQP,GACR,MAEF,IAAK,SACHQ,EAAUR,KAqBhB,OACE,8BACE,uBAAMzC,UAAWC,IAAEkD,KAAMC,SAhBR,SAAAT,GACnBA,EAAEU,kBAEyB,SAAAzC,GAAI,OAC7BN,EAAMgD,MAAK,SAAAC,GAAO,OAAIA,EAAQ3C,OAASA,KAEzC4C,CAAmB5C,GAEfI,EAASG,IAAsB,CAAEP,OAAMW,YADvCkC,MAAM,GAAD,OAAI7C,EAAJ,4BAGToC,EAAQ,IACRC,EAAU,KAKR,UACE,yCAEA,uBACET,KAAK,OACL5B,KAAK,OACL6B,MAAO7B,EACP8B,SAAUQ,EACVlD,UAAWC,IAAEyD,MACbC,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,IAEV,2CACA,uBACErB,KAAK,MACL5B,KAAK,SACL6B,MAAOlB,EACPmB,SAAUQ,EACVlD,UAAWC,IAAEyD,MACbC,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,IAEV,cAACnC,EAAA,EAAD,CAAQc,KAAK,SAASZ,QAAQ,YAA9B,8B,aChEO,SAASkC,IACtB,OACE,eAAChE,EAAA,EAAD,WACE,cAACgD,EAAD,IACA,cAAChB,EAAD,IACA,cAAChB,EAAD","file":"static/js/ContactsPage.eb397154.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContentContainer_container__1TBbK\"};","import s from './ContentContainer.module.css';\n\nexport default function ContentContainer({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__3YsZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"input\":\"ContactForm_input__gm87B\"};","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const items = getItems(state);\n  const filter = getFilter(state);\n\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useEffect } from 'react';\nimport * as operations from 'redux/contacts/contacts-operations';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selector';\nimport s from './ContactList.module.css';\n\nexport default function ContactList() {\n  const items = useSelector(getFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(operations.fetchContacts()), [dispatch]);\n\n  return (\n    <>\n      {items.length > 0 && (\n        <ul className={s.list}>\n          {items.map(({ name, number, id }) => (\n            <li className={s.item} key={id}>\n              <p>\n                {name} : {number}\n              </p>\n              <Button\n                onClick={() => {\n                  dispatch(operations.deleteContact(id));\n                }}\n                variant=\"contained\"\n                startIcon={<DeleteIcon />}\n              >\n                Delete\n              </Button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/contacts/contacts-selector';\nimport * as actions from 'redux/contacts/contacts-slice';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\n\nexport default function Filter() {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n    >\n      <TextField\n        label=\"Find contacts by name\"\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(actions.filter(e.target.value))}\n      />\n    </Box>\n  );\n}\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport s from './ContactForm.module.css';\nimport Button from '@mui/material/Button';\nimport { getItems } from 'redux/contacts/contacts-selector';\nimport * as operations from 'redux/contacts/contacts-operations';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleNameChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      // no default\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const duplicateValidator = name =>\n      items.find(contact => contact.name === name);\n\n    duplicateValidator(name)\n      ? alert(`${name} is already in contacts`)\n      : dispatch(operations.addContact({ name, number }));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label>Name</label>\n\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleNameChange}\n          className={s.input}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <label>Number</label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleNameChange}\n          className={s.input}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <Button type=\"submit\" variant=\"contained\">\n          Add contact\n        </Button>\n      </form>\n    </div>\n  );\n}\n","import ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport ContactForm from 'components/ContactForm';\nimport ContentContainer from 'components/ContentContainer';\n\nexport default function ContactsPage() {\n  return (\n    <ContentContainer>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </ContentContainer>\n  );\n}\n"],"sourceRoot":""}